// подключение основного пакета даннах
package main;

//импортирование классов для последующего использования 
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JApplet;

// формирование апплета
public class osnovnoy extends JApplet{
		
	// создание метода построения аплета
	public osnovnoy() {
	
	// объявление знаения типа класса login(панель авторизации)		
	login LOG = new login();
	// задаем размер выводимой панели авторизации
	LOG.setBounds(0, 0, 684, 662);
	// создание панели 
	getContentPane().add(LOG);
	// параметры отображения стандартные 
	getContentPane().setLayout(null);
	// включение параметра видимости созданной панели
	LOG.setVisible(true);
	
	// объявление знаения типа класса user(режим пользователя)
	user US = new user();	
	// задаем размер выводимой панели пользователя
	US.setBounds(0,0, 684, 662);
	// создание панели 
	getContentPane().add(US);
	// параметры отображения стандартные 
	getContentPane().setLayout(null);
	// выключение параметра видимости созданной панели
	US.setVisible(false);
	
	// объявление знаения типа класса oboz(режим обозревателя)
	oboz OBZ = new oboz();	
	// задаем размер выводимой панели обозревателя
	OBZ.setBounds(0,0, 684, 662);
	// создание панели 
	getContentPane().add(OBZ);
	// параметры отображения стандартные 
	getContentPane().setLayout(null);
	// выключение параметра видимости созданной панели
	OBZ.setVisible(false);
	
	// объявление знаения типа класса konsult(мгновенная консультация)
	konsult KST = new konsult();
	// задаем размер выводимой панели консультация
	KST.setBounds(0, 0, 684, 662);
	// создание панели 
	getContentPane().add(KST);
	// параметры отображения стандартные 
	getContentPane().setLayout(null);
	// выключение параметра видимости созданной панели
	KST.setVisible(false);
	
	// объявление знаения типа класса zakaz(конечный отчет заказа)
	zakaz ZKZ = new zakaz();	
	// задаем размер выводимой панели заказ
	ZKZ.setBounds(0,0, 684, 662);
	// создание панели 
	getContentPane().add(ZKZ);
	// параметры отображения стандартные 
	getContentPane().setLayout(null);
	// включение параметра видимости созданной панели
	ZKZ.setVisible(false);
	
	// формирование действия при нажатии кнопки ВХОД на панели авторизации 
	LOG.button.addActionListener(new ActionListener() {
		// метод ваыполнения при нажатии кнопки ВХОД на панели авторизации 
		public void actionPerformed(ActionEvent arg0) {
			// организация нового значения типа класса uchetki(база данны и алгоритм проверки учетных записей)
			uchetki U=new uchetki();
			// создание целочисленной переменной и запись в нее значения, полученного при выполднении метода bazalog из созданного значения типа класса uchetki 
			int a = U.bazalog(LOG.textField.getText(), LOG.textField.getText());
			//создание условия проверки полученной выше переменной 
			if (a==1){	
				// выключение параметра видимости панели авторизации
				LOG.setVisible(false);
				// включение параметра видимости панели пользователей
				US.setVisible(true);
				// установка имени пользователя в панели пользователя
				US.label_1.setText(LOG.textField.getText()) ;
			} 
			// если условие не верно, но запись имеет администраторские параметры
			else if (a==2) {
						// запись уведомления в окно ввода логина
						LOG.textField.setText("Sorry, user admin");
						// запись уведомления в окно ввода пароля
						LOG.textField_1.setText("not create");
					
					} 
			// иначе при полном несоответствии логина и/или пароля
			else{
						// запись ошибки в окно ввода логина
						LOG.textField.setText("Error");
						// запись ошибки в окно ввода пароля
						LOG.textField_1.setText("Error");
					}
		}
	// завершения действий при нажатии кнопки ВХОД на панели авторизации
	});
	
	// формирование действия при нажатии кнопки "войти как ообозреватель" на панели авторизации 
	LOG.obozr.addActionListener(new ActionListener() {
		// метод выполнения при нажатии кнопки "войти как ообозреватель" на панели авторизации 
		public void actionPerformed(ActionEvent arg0) {
			// выключение параметра видимости панели авторизации
			LOG.setVisible(false);
			// включение параметра видимости панели обозреватель
			OBZ.setVisible(true);
			// установление идентификатора вошеднего пользователя, как "Обозреватель"
			OBZ.label_1.setText("Обозреватель") ;
			// установка красного цвета на идентификатор вошеднего пользователя 
			OBZ.label_1.setForeground(Color.RED);
			}
		// завершения действий при нажатии кнопки "войти как ообозреватель" на панели авторизации 
	});
	
	// формирование действия при нажатии кнопки "Выход" на панели авторизации 
	LOG.button_1.addActionListener(new ActionListener() {
		// метод выполнения при нажатии кнопки "Выход" на панели авторизации 
		public void actionPerformed(ActionEvent arg0) {
			// завершение выполнения программы
			System.exit(0);
			}
	// завершения действий при нажатии кнопки "Выход" на панели авторизации 
	});
	
	// формирование действия при нажатии кнопки "Выйти" на панели пользователя
	US.btnNewButton.addActionListener(new ActionListener() {
		// метод выполнения при нажатии кнопки "Выйти" на панели пользователя
		public void actionPerformed(ActionEvent arg0) {
			// включение параметра видимости панели авторизации
			LOG.setVisible(true);
			// выключение параметра видимости панели пользователя
			US.setVisible(false);
			}
	// завершения действий при нажатии кнопки "Выйти" на панели пользователя
	});
	
	// формирование действия при нажатии кнопки "Мгновенная консультация" на панели пользователя
	US.button.addActionListener(new ActionListener() {
		// метод выполнения при нажатии кнопки "Мгновенная консультация" на панели пользователя
		public void actionPerformed(ActionEvent arg0) {
			// выключение параметра видимости панели пользователя
			US.setVisible(false);
			// включение параметра видимости панели консультации
			KST.setVisible(true);
		}	
	// завершения действий при нажатии кнопки "Мгновенная консультация" на панели пользователя
	});
	
	// формирование действия при нажатии кнопки "Выход" на панели пользователя 
	US.button_1.addActionListener(new ActionListener() {
		// метод выполнения при нажатии кнопки "Выход" на панели пользователя 
		public void actionPerformed(ActionEvent arg0) {
			// завершение выполнения программы
			System.exit(0);
			}
	// завершения действий при нажатии кнопки "Выход" на панели пользователя 
	});
	
	// формирование действия при нажатии кнопки "Создать заказ" на панели пользователя 
	US.button_2.addActionListener(new ActionListener() {
		// метод выполнения при нажатии кнопки "Создать заказ" на панели пользователя  
		public void actionPerformed(ActionEvent arg0) {
			// выключение параметра видимости панели пользователя
			US.setVisible(false);
			// включение параметра видимости панели заказ
			ZKZ.setVisible(true);
		}	
	// завершения действий при нажатии кнопки "Создать заказ" на панели пользователя 
	});
	
	// формирование действия при нажатии кнопки "Выйти" на панели обозреватель 
	OBZ.btnNewButton.addActionListener(new ActionListener() {
		// метод выполнения при нажатии кнопки "Выйти" на панели обозреватель   
		public void actionPerformed(ActionEvent arg0) {
			// включение параметра видимости панели авторизации
			LOG.setVisible(true);
			// выключение параметра видимости панели обозреватель
			OBZ.setVisible(false);
			}
	// завершения действий при нажатии кнопки "Создать заказ" на панели пользователя 	
	});
	
	// формирование действия при нажатии кнопки "Выход" на панели обозреватель 
	OBZ.button_1.addActionListener(new ActionListener() {
		// метод выполнения при нажатии кнопки "Выход" на панели обозреватель 
		public void actionPerformed(ActionEvent arg0) {
			// завершение выполнения программы
			System.exit(0);
			}
	// завершения действий при нажатии кнопки "Выход" на панели обозреватель 	
	});
	
	// формирование действия при нажатии кнопки "Вернуться" на панели консультация 
	KST.button.addActionListener(new ActionListener() {
		// метод выполнения при нажатии кнопки "Вернуться" на панели консультация
		public void actionPerformed(ActionEvent arg0) {
			// включение параметра видимости панели пользователя
			US.setVisible(true);
			// выключение параметра видимости панели консультация
			KST.setVisible(false);
			}
	// завершения действий при нажатии кнопки "Вернуться" на панели консультация 	
	});
	
	// формирование действия при нажатии кнопки "Завершение работы программы" на панели заказ 
	ZKZ.button.addActionListener(new ActionListener() {
		// метод выполнения при нажатии кнопки "Завершение работы программы" на панели заказ
		public void actionPerformed(ActionEvent arg0) {
			// завершение выполнения программы
			System.exit(0);
			}
	// завершения действий при нажатии кнопки "Завершение работы программы" на панели заказ 
	});
	
}
}
